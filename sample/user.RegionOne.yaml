# This is the sample user.yaml for the stacktira scenario
# For additional things that can be configured, look at
# user.stacktira.yaml, or user.common.
#
# Warning:
# When working with non-string types, remember to keep yaml
# anchors within a single file - hiera cannot look them
# up across files. For this reason, editing the lower section
# of this file is not recommended.

enabled_services: &enabled_services
  - nova
  - neutron
  - cinder
  - heat

scenario: stacktira

networking: none
storage:    none
monitoring: none
# The default network config is as follows:
# eth0: vagrant network in testing
# eth1: deploy network
# eth2: public api network
# eth3: private service network + GRE
# eth4: external data network

build_server_name: build-server
build_server_ip: 192.168.242.100

# These are legacy mappings, and should have no effect
controller_public_address: 10.2.3.105
controller_internal_address: 10.3.3.105
controller_admin_address: 10.3.3.105

# Interface that will be stolen by the l3 router on
# the control node.
external_interface: eth2
# for a provider network on this interface instead of
# an l3 agent use these options
openstacklib::openstack::provider::interface: eth2
neutron::plugins::ovs::network_vlan_ranges: default

# Gre tunnel address for each node
internal_ip: "%{ipaddress_eth3}"

# This is the interface that each node will be binding
# various services on.
deploy_bind_ip: "%{ipaddress_eth1}"
public_bind_ip: "%{ipaddress_eth2}"
private_bind_ip: "%{ipaddress_eth3}"

# The public VIP, where all API services are exposed to users.
public_vip: 10.2.3.105

# The private VIP, where internal services are exposed to openstack services.
private_vip: 10.3.3.105

# List of IP addresses for controllers on the public network
control_servers_public: &control_servers_public  [ '10.2.3.110', '10.2.3.111', '10.2.3.112']

# List of IP addresses for controllers on the private network
control_servers_private: &control_servers_private  [ '10.3.3.110', '10.3.3.111', '10.3.3.112']

# A hash of hostnames to private network IPs. Used for rabbitmq hosts
# resolution
openstacklib::hosts::cluster_hash:
  regsubr1private:
    ip: '10.3.3.110'
  regsubr2private:
    ip: '10.3.3.111'
  regsubr3private:
    ip: '10.3.3.112'

# List of controller hostnames. Used for rabbitmq hosts list
cluster_names: &cluster_names  [ 'regsubr1private', 'regsubr2private', 'regsubr3private' ]

# Virtual router IDs for the VIPs in this cluster. If you are
# running multiple VIPs on one network these need to be different
# for each VIP
openstacklib::loadbalance::haproxy::public_vrid: 60
openstacklib::loadbalance::haproxy::private_vrid: 61

#Libvirt type
nova::compute::libvirt::libvirt_virt_type: qemu

horizon::wsgi::apache::bind_address: "%{ipaddress_eth2}"

# Use these to set an apt proxy if running on a Debian-like
apt::proxy_host: 192.168.0.18
apt::proxy_port: 8000

# This node will be used to bootstrap the cluster on initial deployment
# or if there is a total failure of the control cluster
galera::galera_master: 'regsubr1.domain.name'

# Proxy configuration of either apt or yum
openstacklib::repo::apt_proxy_host: '192.168.0.18'
openstacklib::repo::apt_proxy_port: '8000'
openstacklib::repo::yum_http_proxy: 'http://192.168.0.18:8000'
openstacklib::repo::yum_epel_mirror: 'http://mirror.aarnet.edu.au'
openstacklib::repo::yum_base_mirror: 'http://mirror.aarnet.edu.au'

#########################################
# Anchor mappings for non-string elements
#########################################

neutron::rabbit_hosts: *cluster_names
nova::rabbit_hosts: *cluster_names
cinder::rabbit_hosts: *cluster_names
rabbitmq::cluster_nodes: *cluster_names
openstacklib::loadbalance::haproxy::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::ceilometer::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::cinder::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::heat::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::mysql::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::neutron::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::nova::cluster_names: *cluster_names
openstacklib::loadbalance::haproxy::rabbitmq::cluster_names: *cluster_names

openstacklib::loadbalance::haproxy::ceilometer::cluster_addresses: *control_servers_public
openstacklib::loadbalance::haproxy::cinder::cluster_addresses: *control_servers_public
openstacklib::loadbalance::haproxy::heat::cluster_addresses: *control_servers_public
openstacklib::loadbalance::haproxy::neutron::cluster_addresses: *control_servers_public
openstacklib::loadbalance::haproxy::nova::cluster_addresses: *control_servers_public

openstacklib::loadbalance::haproxy::mysql::cluster_addresses: *control_servers_private
openstacklib::loadbalance::haproxy::rabbitmq::cluster_addresses: *control_servers_private
galera::galera_servers: *control_servers_private

openstacklib::openstack::databases::enabled_services: *enabled_services
