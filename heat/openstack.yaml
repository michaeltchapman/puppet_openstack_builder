heat_template_version: 2013-05-23

description: >
  HOT template to create a stack that instantiates the currently selected scenario

parameters:
  image:
    type: string
    default: centos7-64
    description: The image to use for all nodes
  key_name:
    type: string
    default: test2
    description: The key name to use for all nodes
  ci_network_id:
    type: string
    default: a9009b4d-b121-4ac1-9bd3-a4ac385c6acd
    description: The shared build network to use
  ci_subnet_id:
    type: string
    default: e2a412df-3163-4aa0-8069-3dde625462cd
    description: The shared build network to use
  internal_network_name:
    type: string
    description: The name of the internal network
    default: testint
  external_network_name:
    type: string
    description: The name of the internal network
    default: testext

resources:
  build1_ci:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: ci_network_id }
      fixed_ips:
        - subnet_id: { get_param: ci_subnet_id  }

  control1_ci:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: ci_network_id }
      fixed_ips:
        - subnet_id: { get_param: ci_subnet_id  }

  compute1_ci:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: ci_network_id }
      fixed_ips:
        - subnet_id: { get_param: ci_subnet_id  }

  internal_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: internal_network_name }

  control1_int:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: internal_net  }
      fixed_ips:
        - subnet_id: { get_resource: internal_subnet  }

  compute1_int:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: internal_net  }
      fixed_ips:
        - subnet_id: { get_resource: internal_subnet  }

  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: internal_net }
      cidr: 10.3.3.0/24
      gateway_ip: null

  external_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: external_network_name }

  external_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: external_net }
      cidr: 10.2.3.0/24
      gateway_ip: null

  control1_ext:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: external_net  }
      fixed_ips:
        - subnet_id: { get_resource: external_subnet  }

  build1:
    type: OS::Nova::Server
    properties:
      name: build1
      image: { get_param: image}
      flavor: m1.medium
      key_name: { get_param: key_name}
      networks:
        - port: { get_resource: build1_ci}
      user_data:
        get_file: 'https://raw.githubusercontent.com/michaeltchapman/puppet_openstack_builder/r7/provision/bootstrap.sh'

  control1:
    type: OS::Nova::Server
    properties:
      name: control1
      image: { get_param: image}
      flavor: m1.medium
      key_name: { get_param: key_name}
      networks:
        - port: { get_resource: control1_ci}
        - port: { get_resource: control1_int}
        - port: { get_resource: control1_ext}
      user_data:
        get_file: 'https://raw.githubusercontent.com/michaeltchapman/puppet_openstack_builder/r7/provision/bootstrap.sh'

  compute1:
    type: OS::Nova::Server
    properties:
      name: compute1
      image: { get_param: image}
      flavor: m1.medium
      key_name: { get_param: key_name}
      networks:
        - port: { get_resource: compute1_ci}
        - port: { get_resource: compute1_int}
      user_data:
        get_file: 'https://raw.githubusercontent.com/michaeltchapman/puppet_openstack_builder/r7/provision/bootstrap.sh'
      metadata: 
        - control_public: { get_attr [ control1, networks, 0, fixed_ip ]}
        - control_internal: { get_attr [ control1, networks, 0, fixed_ip ]}
