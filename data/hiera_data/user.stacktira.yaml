# For the case where the node hostname already resolves to something else,
# force the nodename to be the private shortname we're using above.
rabbitmq::environment_variables:
 'NODENAME': "rabbit@%{hostname}private"

apache::default_vhost: false

#bypass python-heatclient bug https://bugs.launchpad.net/heat/+bug/1342621
horizon::openstack_endpoint_type: internalURL

# We are using the new version of puppetlabs-mysql, which
# requires this parameter for compatibility.
mysql_module: '2.2'

# Defaults to nogroup, which is not present on RHEL-likes
neutron::agents::lbaas::user_group: nobody

# Install the python mysql bindings on all hosts
# that include mysql::bindings
mysql::bindings::python_enable: true

# This can be either percona or mariadb, depending on preference
galera::vendor_type: 'mariadb'

# Turn galera into master-slave mode, where flow control
# is more relaxed, and bump up the number of max connections
galera::override_options:
  mysqld:
    wsrep_provider_options:
      'gcs.fc_limit=500; gcs.fc_master_slave=YES; gcs.fc_factor=1.0'
    max_connections:
      '1000'

# epel is included by openstack::repo::rdo, so we
# don't need it from other modules
galera::repo::epel_needed: false

# We are using the new rabbitmq module, which removes
# the rabbitmq::server class in favor of ::rabbitmq
nova::rabbitmq::rabbitmq_class: '::rabbitmq'

# We don't want to get Rabbit from the upstream, instead
# preferring the RDO/UCA version.
rabbitmq::manage_repos: false
rabbitmq::package_source: false

# Change this to apt on debians
rabbitmq::package_provider: yum

# The rabbit module expects the upstream rabbit package, which
# includes plugins that the distro packages do not.
rabbitmq::admin_enable: false

# Rabbit clustering configuration
rabbitmq::config_cluster: true
rabbitmq::config_mirrored_queues: true
rabbitmq::cluster_node_type: 'disc'
rabbitmq::wipe_db_on_cookie_change: true

# This is the port range for rabbit clustering
rabbitmq::config_kernel_variables:
  inet_dist_listen_min: 9100
  inet_dist_listen_max: 9105

# Openstack version to install
openstack_release: icehouse

# RedHat doesn't package a very recent version of HAProxy
# that supports SSL termination
openstacklib::loadbalance::haproxy::package_override: 'http://stacktira.aptira.com/files/packages/haproxy-1.5.2-1.x86_64.rpm'

# Allow internal comms on compute node
openstacklib::firewall::compute::interface: eth3

# Store reports in puppetdb
puppet::master::reports: 'store,puppetdb'

# This purges config files to remove entries not set by puppet.
# This is essential on RDO where qpid is the default
glance::api::purge_config: true

# PKI will cause issues when using load balancing because each
# keystone will be a different CA, so use uuid.
keystone::token_provider: 'keystone.token.providers.uuid.Provider'

# Validate keystone connection via VIP before
# evaluating custom types
keystone::validate_service: true

# Haproxy is installed via puppetlabs-haproxy, so we don't need to install it
# via lbaas agent
neutron::agents::lbaas::manage_haproxy_package: false

# This is to handle a bug in conversion, because full_ha sets this to
# false and messes up the mappings
neutron::agents::metadata::shared_secret: "%{hiera('metadata_shared_secret')}"

# Multi-region mappings. See contrib/aptira/puppet/user.regcon.yaml for a sample
# on setting multiple regions
openstacklib::openstack::regions::nova_user_pw: "%{hiera('nova_service_password')}"
openstacklib::openstack::regions::neutron_user_pw:  "%{hiera('network_service_password')}"
openstacklib::openstack::regions::glance_user_pw:  "%{hiera('glance_service_password')}"
openstacklib::openstack::regions::heat_user_pw:  "%{hiera('heat_service_password')}"
openstacklib::openstack::regions::cinder_user_pw: "%{hiera('cinder_service_password')}"
openstacklib::openstack::regions::ceilometer_user_pw: "%{hiera('ceilometer_service_password')}"

# Ciphers to accept when connecting to the dashboard using SSL
openstacklib::loadbalance::haproxy::dashboard::ssl_ciphers:
  - RC4-SHA
  - AES128-SHA
  - AES256-SHA

# Needed to set up Neutron notifications to Nova
controller_internal_url: "%{hiera('controller_internal_protocol')}://%{hiera('controller_internal_address')}"

# Bind options to be passed to HAproxy if ssl is enabled. This
# will only affect the public endpoints and dashboard.
ssl_bind_options:
  - ssl
  - crt
  - "%{hiera('haproxy_cert_path')}"

# Nova API worker processes
nova::api::osapi_compute_workers: 4

# Nova metadata worker processes
nova::api::metadata_workers: 4

# Nova conductor worker processes
nova::conductor::workers: 4

# Glance API processes
glance::api::workers: 4

# Neutron server processes
neutron::api_workers: 4

# There is an override for this in user.common which will
# kill any mappings
nova::compute::vncserver_proxyclient_address: "%{hiera('private_bind_ip')}"

# Singleton for ceilometer central agent
openstacklib::openstack::singleton::service_title: 'ceilometer-agent-central'
